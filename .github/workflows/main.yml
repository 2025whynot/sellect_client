name: Deploy to S3

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Vite가 잘 되는 버전 (프로젝트에 맞게 변경)

      # 3. 의존성 설치
      - name: Install dependencies
        run: npm install

      # 4. 빌드 실행
      - name: Build
        run: npm run build

      # 5. AWS CLI 설치 및 S3 업로드
      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region name: Deploy to S3

on:
  push:
    branches:
      - main  # 푸시 대상 브랜치 (필요하면 변경)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Vite가 잘 되는 버전 (프로젝트에 맞게 변경)

      # 3. 의존성 설치
      - name: Install dependencies
        run: npm install

      # 4. 빌드 실행
      - name: Build
        run: npm run build

      # 5. AWS CLI 설치 및 S3 업로드
      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ap-northeast-2
          aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET }}/dist/ --delete

      # 6. (선택) CloudFront 캐시 무효화
      - name: Invalidate CloudFront
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"  # 리전 변경 가능
          aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET }}/dist/ --delete
